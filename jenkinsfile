pipeline {
    agent any

    environment {
        SONAR_TOKEN = ''
        SONARQUBE_URL = 'http://34.236.154.196:9000/'
        PATH = "/opt/sonar-scanner/bin:${env.PATH}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Clone the GitHub repository containing index.html
                git branch: 'main', url: 'https://github.com/EASWAR17/test.git'
            }
        }

        stage('SonarQube Scan') {
            steps {
                script {
                    // Run the SonarQube scanner
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey='my_project' \
                        -Dsonar.sources=. \
                        -Dsonar.inclusions='index.html' \
                        -Dsonar.host.url=${SONARQUBE_URL} \
sonar.login=squ_66828cb0623f706990a244f17579b8ed2dac6291
                    """
                }
            }
        }

        stage('SonarQube Quality Gate analysis') {
            steps {
                script {
                    def projectKey = 'my_project'
                   
                    def sonarUser = 'admin'
                    def sonarPassword = 'admin123'
                   
                    def response = sh(script: """
                        curl -u ${sonarUser}:${sonarPassword} "${SONARQUBE_URL}/api/qualitygates/project_status?projectKey=${projectKey}"
                    """, returnStdout: true).trim()
                    
                    echo "Raw API Response: ${response}"
                   
                    def jsonResponse = readJSON text: response
                    def GateStatus = jsonResponse.projectStatus.status
                    
                    echo "Quality Gate Status: ${qualityGateStatus}"
                    
                    if (GateStatus == 'NONE') {
                        error "Quality gate status is 'NONE'. Please check SonarQube configuration."
                    } else if (GateStatus != 'OK') {
                        error "Quality gate failed: ${qualityGateStatus}"
                    } else {
                        echo "Quality gate passed"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'SonarQube scan completed successfully!'
        }
        failure {
            echo 'SonarQube scan failed!'
        }
    }
}
